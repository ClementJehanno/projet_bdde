db.qualite_air.find({"VILLE":"ANGERS"})

db.qualite_air.find({"VILLE":"ANGERS","SOUS_INDICE_OZONE":2})

db.qualite_air.find({"DATE":{$regex:'([0-9]*/[0-9]*/2006)'}})

db.qualite_air.find({"DATE":{$regex:'([0-9]*/[0-9]*/200[5-6])'}})

db.qualite_air.aggregate([{$group:{_id:"$id",indice_particules_fine_moyen:{$avg:"$SOUS_INDICE_PARTICULES_FINES"}}}])
db.qualite_air.aggregate([{$group:{_id:"$id",indice_particules_fine_moyen:{$avg:"$SOUS_INDICE_DIOXYDE_D'AZOTE"}}}])

db.qualite_air.aggregate([{$group:{_id:"$VILLE",indice_particules_fine_moyen:{$avg:"$SOUS_INDICE_PARTICULES_FINES"}}}])
=> moyenne des sous indices de particules fines
db.qualite_air.aggregate([{$group:{_id:"$VILLE",indice_qualite_air:{$avg:"$INDICE_QUALITE_AIR"}}}])

db.qualite_air.aggregate([{$match:{"CODE_COULEUR":{$eq:"ROUGE"}}},{$count :"nb_codes_rouge"}])
db.qualite_air.aggregate([{$match:{"CODE_COULEUR":{$eq:"VERT"}}},{$count :"nb_codes_rouge"}])

db.qualite_air.aggregate([{$match:{"VILLE":{$eq:"ANGERS"}}},{$count : "nb_occurence_angers"}])

db.qualite_air.aggregate([{$match:{"DATE":{$regex:'([0-9]*/[0-9]*/2015)'}}},{$group:{_id:{DATE:"$DATE"},indice_qualite_air:{$avg:"$INDICE_QUALITE_AIR"}}}])
=> Pour l'année 2015 on groupe tous les indices de qualité de l'air par jour, pratique car on peut essayer de corréler avec les autres datas

----------------------------------------------------------------------------------------- Queries sur le format de test -----------------------------------------------------------------------------------------

db.test_format.find({"VILLE.NOM":"ANGERS"})			//En fait ici il faut parcourir les noeuds.

db.test_format.find({"VILLE.NOM":"NANTES"},{VILLE:1})		//Equivalent d'un SELECT VILLE FROM * avec un VILLE:0 on retourne tout sauf la ville
db.test_format.find({"VILLE.NOM":"ANGERS","POLLUTION_AIR.INDICE_QUALITE_AIR":3}, {"VILLE.NOM":1,"VILLE.LOCATION":1})		//En fait le ville:1 va afficher tout le contenu de ville

db.test_format.aggregate([{$group:{_id:"$VILLE.NOM"}}])		//grouup by 

db.test_format.aggregate([{$group:{_id:"$VILLE.NOM",indice_qualite_air:{$avg:"$POLLUTION_AIR.INDICE_QUALITE_AIR"}}}])

db.test_format.aggregate([{$group:{_id:"$VILLE.NOM",indice_qualite_air:{$avg:"$POLLUTION_AIR.INDICE_QUALITE_AIR"},indice_souffre:{$avg:"$POLLUTION_SOUFFRE.VALEUR_LIMITE_MOY_HORAIRE_24H"}}}])

db.test_format.aggregate([{$group:{_id:"$ville_commun", moy_montee_descente:{$avg:"$M/D_gare"}}}])


Moi j'aimerai voir les locations qui ont la pollution moyenne au cours des dernières années la moins haute et voir si il y a une réserve naturelle proche

En fait ici c'est compliqué, avec les bonnes datas ça sera ez

db.test_format.aggregate([{$group:{_id:"$VILLE", pollution_moyenne:{$min:{$avg:"$INDICE_QUALITE_AIR"}}}}])

db.test_format.aggregate([{$group:{_id:"$VILLE", pollution_moyenne:{$avg:"$INDICE_QUALITE_AIR"}, pollution_minimal:{$min:"$INDICE_QUALITE_AIR"}}}])

Ok la ville d'ANgers a une moyenne en dioxide de carbone (car on sait que le carbon = voiture ? ) élevé, est-ce que le trafic l'est aussi ? Et on fait genre un group by sur tout ça pour comparer un peu genre voir si Nantes est elevé, est-ce que son trafic l'est, etc

Alors attention à ne pas aller trop loin, là on est dans le big data comme nous a dit la prof donc c'est pas tant que ça notre boulot, nous faudrait juste des graphes avec des proportions

Donc dans l'idée faudrait qu'on regarde la moyenne de pollution pour chaque ville
Ainsi que la pollution, into petit graphe. Ez.

db.test_format.aggregate([{$group:{_id:"$VILLE", pollution_moyenne:{$avg:"$INDICE_QUALITE_AIR"}}}])

donc ici admettons j'ai une ville_proche
ENsuite je peux faire une query sur la ville proche genre

db.test_format.aggregate([{$group:{_id:"$ville_commun", moy_montee_descente:{$avg:"$M/D_gare"}}}])

Normalement ça devrait filer des résultats concordants.